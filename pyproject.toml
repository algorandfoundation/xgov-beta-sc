[tool.poetry]
package-mode = false
name = "xgov-beta-sc"
version = "1.0.1"
description = "Algorand xGov Beta Smart Contracts"
authors = ["Algorand Foundation <contact@algorand.foundation>"]
readme = "README.md"
homepage = "https://xgov.algorand.co/"
repository = "https://github.com/algorandfoundation/xgov-beta-sc"
documentation = "https://algorandfoundation.github.io/xgov-beta-sc/"

[tool.poetry.dependencies]
python = "^3.12"
algokit-utils = "^4.2.0"
python-dotenv = "^1.1.1"
algorand-python = "==2.9.0"
poetry-core = "^2.1.3"
types-hvac = "^2.3.0.20250809"
hvac = "^2.3.0"

[tool.poetry.group.dev.dependencies]
algokit-client-generator = "^2.2.0"
black = {extras = ["d"], version = "^25.1.0"}
ruff = "^0.12.11"
mypy = "^1.17.1"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-sugar = "^1.1.1"
pip-audit = "^2.9.0"
pre-commit = "^4.3.0"
puyapy = "==4.10.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
lint.select = ["E", "F", "ANN", "UP", "N", "C4", "B", "A", "YTT", "W", "FBT", "Q", "RUF", "I"]
lint.ignore = [
  "ANN101", # no type for self
  "ANN102", # no type for cls
]
lint.unfixable = ["B", "RUF"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true

[tool.pytest.ini_options]
pythonpath = ["smart_contracts", "tests"]

[tool.mypy]
files = "smart_contracts/"
python_version = "3.12"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
strict_concatenate = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
