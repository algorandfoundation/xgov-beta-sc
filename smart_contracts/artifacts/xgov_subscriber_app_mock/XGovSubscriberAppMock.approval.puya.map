{
  "version": 3,
  "sources": [
    "../../xgov_subscriber_app_mock/contract.py"
  ],
  "mappings": ";;;;;;;AAcA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;;;;;;AACK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGwC;;AACzB;;;;;;;;;;AADyB;AAAA;AAAA;AAKxB;;AAAA;;AAAA;AAIb;;;;;;;AALU;;;AAAA;;;AAKV;;;;AAAA;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAZH;AAAA;AAmBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG;AAIS;;AAAqB;;AAArB;AAFQ;;;;;;AAFjB;;;;;;;;;;AAAA;;;;;AAAA;AAFH;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 8 0 6"
    },
    "7": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "9": {
      "op": "bz main___algopy_default_create@9",
      "stack_out": []
    },
    "12": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "14": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "15": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "16": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "18": {
      "op": "assert",
      "stack_out": []
    },
    "19": {
      "op": "pushbytess 0x42317b4f 0x5a2a3f16 // method \"subscribe_xgov(uint64,address)void\", method \"unsubscribe_xgov(uint64)void\"",
      "defined_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)"
      ],
      "stack_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)"
      ]
    },
    "31": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)",
        "tmp%6#0"
      ]
    },
    "34": {
      "op": "match subscribe_xgov unsubscribe_xgov",
      "stack_out": []
    },
    "40": {
      "op": "err"
    },
    "41": {
      "block": "main___algopy_default_create@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "43": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "44": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "46": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "47": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "48": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "49": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "50": {
      "op": "return",
      "stack_out": []
    },
    "51": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.subscribe_xgov[routing]",
      "params": {},
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "55": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "56": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "57": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "58": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "btoi",
      "defined_out": [
        "app_id#0"
      ],
      "stack_out": [
        "app_id#0"
      ]
    },
    "60": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app_id#0",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0"
      ]
    },
    "63": {
      "op": "dup",
      "defined_out": [
        "app_id#0",
        "voting_address#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "voting_address#0 (copy)"
      ]
    },
    "64": {
      "op": "len",
      "defined_out": [
        "app_id#0",
        "len%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "len%1#0"
      ]
    },
    "65": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "app_id#0",
        "len%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "len%1#0",
        "32"
      ]
    },
    "67": {
      "op": "==",
      "defined_out": [
        "app_id#0",
        "eq%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "eq%1#0"
      ]
    },
    "68": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "app_id#0",
        "voting_address#0"
      ]
    },
    "69": {
      "op": "dig 1",
      "defined_out": [
        "app_id#0",
        "app_id#0 (copy)",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "app_id#0 (copy)"
      ]
    },
    "71": {
      "op": "pushbytes 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "app_id#0",
        "app_id#0 (copy)",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "app_id#0 (copy)",
        "0x78676f765f666565"
      ]
    },
    "81": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_xgov_min_balance_exists#0",
        "app_id#0",
        "voting_address#0",
        "xgov_fee#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "xgov_fee#0",
        "_xgov_min_balance_exists#0"
      ]
    },
    "82": {
      "op": "pop",
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "xgov_fee#0"
      ]
    },
    "83": {
      "op": "swap",
      "stack_out": [
        "app_id#0",
        "xgov_fee#0",
        "voting_address#0"
      ]
    },
    "84": {
      "op": "dig 2",
      "stack_out": [
        "app_id#0",
        "xgov_fee#0",
        "voting_address#0",
        "app_id#0 (copy)"
      ]
    },
    "86": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "app_id#0",
        "check%0#0",
        "value%0#0",
        "voting_address#0",
        "xgov_fee#0"
      ],
      "stack_out": [
        "app_id#0",
        "xgov_fee#0",
        "voting_address#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "88": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app_id#0",
        "xgov_fee#0",
        "voting_address#0",
        "value%0#0"
      ]
    },
    "89": {
      "op": "itxn_begin"
    },
    "90": {
      "op": "uncover 2",
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "value%0#0",
        "xgov_fee#0"
      ]
    },
    "92": {
      "op": "itxn_field Amount",
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "value%0#0"
      ]
    },
    "94": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "app_id#0",
        "voting_address#0"
      ]
    },
    "96": {
      "op": "intc_0 // pay",
      "defined_out": [
        "app_id#0",
        "pay",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "pay"
      ]
    },
    "97": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_id#0",
        "voting_address#0"
      ]
    },
    "99": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "app_id#0",
        "voting_address#0"
      ],
      "stack_out": [
        "app_id#0",
        "voting_address#0",
        "0"
      ]
    },
    "100": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_id#0",
        "voting_address#0"
      ]
    },
    "102": {
      "op": "itxn_next"
    },
    "103": {
      "op": "swap",
      "stack_out": [
        "voting_address#0",
        "app_id#0"
      ]
    },
    "104": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "106": {
      "op": "pushbytes 0xa082cef8 // method \"subscribe_xgov(address,pay)void\"",
      "defined_out": [
        "Method(subscribe_xgov(address,pay)void)",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "Method(subscribe_xgov(address,pay)void)"
      ]
    },
    "112": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "114": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "116": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "117": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "119": {
      "op": "intc_2 // 0",
      "stack_out": [
        "0"
      ]
    },
    "120": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "122": {
      "op": "itxn_submit"
    },
    "123": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "124": {
      "op": "return",
      "stack_out": []
    },
    "125": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.unsubscribe_xgov[routing]",
      "params": {},
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "129": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "130": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "131": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "132": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "133": {
      "op": "btoi",
      "defined_out": [
        "app_id#0"
      ],
      "stack_out": [
        "app_id#0"
      ]
    },
    "134": {
      "op": "itxn_begin"
    },
    "135": {
      "op": "global MinTxnFee",
      "defined_out": [
        "app_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "app_id#0",
        "tmp%0#1"
      ]
    },
    "137": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "app_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "app_id#0",
        "tmp%0#1",
        "2"
      ]
    },
    "139": {
      "op": "*",
      "defined_out": [
        "app_id#0",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "app_id#0",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "140": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app_id#0",
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "app_id#0",
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "142": {
      "op": "uncover 2",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "app_id#0"
      ]
    },
    "144": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "146": {
      "op": "pushbytes 0x76725559 // method \"unsubscribe_xgov(address)void\"",
      "defined_out": [
        "Method(unsubscribe_xgov(address)void)",
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "Method(unsubscribe_xgov(address)void)"
      ]
    },
    "152": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "154": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "156": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "appl"
      ]
    },
    "157": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "159": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "161": {
      "op": "itxn_submit"
    },
    "162": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "163": {
      "op": "return",
      "stack_out": []
    }
  }
}