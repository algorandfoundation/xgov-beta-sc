{
  "version": 3,
  "sources": [
    "../../proposal_mock/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBgB;AADJ;;AADJ;AAMQ;AADJ;AADJ;AAMQ;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;AADmB;AAD3B;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;AADJ;AADJ;AA9DR;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;AAwFK;AAAA;AAxFL;;;;;;AAAA;;;AAAA;;;;AAAA;AAmEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG;AAAA;AAAA;AACA;AAA6B;;AAA7B;AAHH;AAAA;AAKA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG;AAAA;AAAA;AAFH;AAAA;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG;;AAAA;AAAA;AAFH;AAAA;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIG;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AANH;AAAA;AAYA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 32"
    },
    "7": {
      "op": "bytecblock 0x70726f706f736572 0x72656769737472795f6170705f6964 0x 0x737461747573 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573"
    },
    "106": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "108": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "111": {
      "op": "bytec_0 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "112": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x70726f706f736572",
        "tmp%0#2"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "tmp%0#2"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec_1 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "116": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "0"
      ]
    },
    "117": {
      "op": "app_global_put",
      "stack_out": []
    },
    "118": {
      "op": "pushbytes 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "125": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "pushbytes 0x6f70656e5f74696d657374616d70",
      "defined_out": [
        "0x6f70656e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x6f70656e5f74696d657374616d70"
      ]
    },
    "143": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f74696d657374616d70",
        "0"
      ]
    },
    "144": {
      "op": "app_global_put",
      "stack_out": []
    },
    "145": {
      "op": "pushbytes 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "168": {
      "op": "app_global_put",
      "stack_out": []
    },
    "169": {
      "op": "bytec_3 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "171": {
      "op": "app_global_put",
      "stack_out": []
    },
    "172": {
      "op": "pushbytes 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "190": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f63617465676f7279",
        "0"
      ]
    },
    "191": {
      "op": "app_global_put",
      "stack_out": []
    },
    "192": {
      "op": "pushbytes 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "206": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "207": {
      "op": "app_global_put",
      "stack_out": []
    },
    "208": {
      "op": "bytec 4 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "210": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "211": {
      "op": "app_global_put",
      "stack_out": []
    },
    "212": {
      "op": "pushbytes 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "227": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "228": {
      "op": "app_global_put",
      "stack_out": []
    },
    "229": {
      "op": "bytec 5 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "231": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "232": {
      "op": "app_global_put",
      "stack_out": []
    },
    "233": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "236": {
      "op": "app_global_put",
      "stack_out": []
    },
    "237": {
      "op": "bytec 7 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "239": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "240": {
      "op": "app_global_put",
      "stack_out": []
    },
    "241": {
      "op": "pushbytes 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0x766f7465645f6d656d62657273"
      ]
    },
    "256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f7465645f6d656d62657273",
        "0"
      ]
    },
    "257": {
      "op": "app_global_put",
      "stack_out": []
    },
    "258": {
      "op": "pushbytes 0x617070726f76616c73",
      "defined_out": [
        "0x617070726f76616c73"
      ],
      "stack_out": [
        "0x617070726f76616c73"
      ]
    },
    "269": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x617070726f76616c73",
        "0"
      ]
    },
    "270": {
      "op": "app_global_put",
      "stack_out": []
    },
    "271": {
      "op": "pushbytes 0x72656a656374696f6e73",
      "defined_out": [
        "0x72656a656374696f6e73"
      ],
      "stack_out": [
        "0x72656a656374696f6e73"
      ]
    },
    "283": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x72656a656374696f6e73",
        "0"
      ]
    },
    "284": {
      "op": "app_global_put",
      "stack_out": []
    },
    "285": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "287": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "288": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "289": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "291": {
      "op": "bz main_create_NoOp@11",
      "stack_out": []
    },
    "294": {
      "op": "pushbytess 0x1394cc3c 0xd3791253 0x025a9804 0xe94a444d 0xbb8e1d68 // method \"set_status(uint64)void\", method \"set_requested_amount(uint64)void\", method \"set_committee_details(byte[32],uint64,uint64)void\", method \"release_funds()void\", method \"vote(address,uint64,uint64)void\"",
      "defined_out": [
        "Method(release_funds()void)",
        "Method(set_committee_details(byte[32],uint64,uint64)void)",
        "Method(set_requested_amount(uint64)void)",
        "Method(set_status(uint64)void)",
        "Method(vote(address,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(set_status(uint64)void)",
        "Method(set_requested_amount(uint64)void)",
        "Method(set_committee_details(byte[32],uint64,uint64)void)",
        "Method(release_funds()void)",
        "Method(vote(address,uint64,uint64)void)"
      ]
    },
    "321": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(release_funds()void)",
        "Method(set_committee_details(byte[32],uint64,uint64)void)",
        "Method(set_requested_amount(uint64)void)",
        "Method(set_status(uint64)void)",
        "Method(vote(address,uint64,uint64)void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(set_status(uint64)void)",
        "Method(set_requested_amount(uint64)void)",
        "Method(set_committee_details(byte[32],uint64,uint64)void)",
        "Method(release_funds()void)",
        "Method(vote(address,uint64,uint64)void)",
        "tmp%4#0"
      ]
    },
    "324": {
      "op": "match set_status set_requested_amount set_committee_details main_release_funds_route@8 vote",
      "stack_out": []
    },
    "336": {
      "op": "err"
    },
    "337": {
      "block": "main_release_funds_route@8",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "338": {
      "op": "return",
      "stack_out": []
    },
    "339": {
      "block": "main_create_NoOp@11",
      "stack_in": [],
      "op": "pushbytes 0xcc694eaa // method \"create(address)void\"",
      "defined_out": [
        "Method(create(address)void)"
      ],
      "stack_out": [
        "Method(create(address)void)"
      ]
    },
    "345": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create(address)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "tmp%5#0"
      ]
    },
    "348": {
      "op": "match create",
      "stack_out": []
    },
    "352": {
      "op": "err"
    },
    "353": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "356": {
      "op": "dup",
      "defined_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ]
    },
    "357": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0"
      ]
    },
    "358": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0",
        "32"
      ]
    },
    "359": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "eq%0#0"
      ]
    },
    "360": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposer#0"
      ]
    },
    "361": {
      "op": "bytec_0 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "0x70726f706f736572"
      ]
    },
    "362": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0"
      ]
    },
    "363": {
      "op": "app_global_put",
      "stack_out": []
    },
    "364": {
      "op": "bytec_1 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "365": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "tmp%0#1"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "tmp%0#1"
      ]
    },
    "367": {
      "op": "app_global_put",
      "stack_out": []
    },
    "368": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "369": {
      "op": "return",
      "stack_out": []
    },
    "370": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_status[routing]",
      "params": {},
      "block": "set_status",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "373": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "374": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "375": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "376": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "377": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "378": {
      "op": "btoi",
      "defined_out": [
        "status#0"
      ],
      "stack_out": [
        "status#0"
      ]
    },
    "379": {
      "op": "bytec_3 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "status#0"
      ],
      "stack_out": [
        "status#0",
        "0x737461747573"
      ]
    },
    "380": {
      "op": "swap",
      "stack_out": [
        "0x737461747573",
        "status#0"
      ]
    },
    "381": {
      "op": "app_global_put",
      "stack_out": []
    },
    "382": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "383": {
      "op": "return",
      "stack_out": []
    },
    "384": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_requested_amount[routing]",
      "params": {},
      "block": "set_requested_amount",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "387": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "388": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "389": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "390": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "391": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "392": {
      "op": "btoi",
      "defined_out": [
        "requested_amount#0"
      ],
      "stack_out": [
        "requested_amount#0"
      ]
    },
    "393": {
      "op": "bytec 4 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "395": {
      "op": "swap",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#0"
      ]
    },
    "396": {
      "op": "app_global_put",
      "stack_out": []
    },
    "397": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "398": {
      "op": "return",
      "stack_out": []
    },
    "399": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_committee_details[routing]",
      "params": {},
      "block": "set_committee_details",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "metadata_hash#0"
      ],
      "stack_out": [
        "metadata_hash#0"
      ]
    },
    "402": {
      "op": "dup",
      "defined_out": [
        "metadata_hash#0",
        "metadata_hash#0 (copy)"
      ],
      "stack_out": [
        "metadata_hash#0",
        "metadata_hash#0 (copy)"
      ]
    },
    "403": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "metadata_hash#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "len%0#0"
      ]
    },
    "404": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "metadata_hash#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "len%0#0",
        "32"
      ]
    },
    "405": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "metadata_hash#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "eq%0#0"
      ]
    },
    "406": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "metadata_hash#0"
      ]
    },
    "407": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "metadata_hash#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0"
      ]
    },
    "410": {
      "op": "dup",
      "defined_out": [
        "metadata_hash#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "411": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "metadata_hash#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0",
        "len%1#0"
      ]
    },
    "412": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%1#0",
        "metadata_hash#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0",
        "len%1#0",
        "8"
      ]
    },
    "413": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "metadata_hash#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0",
        "eq%1#0"
      ]
    },
    "414": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "metadata_hash#0",
        "tmp%1#0"
      ]
    },
    "415": {
      "op": "btoi",
      "defined_out": [
        "metadata_hash#0",
        "size#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0"
      ]
    },
    "416": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0"
      ]
    },
    "419": {
      "op": "dup",
      "defined_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "420": {
      "op": "len",
      "defined_out": [
        "len%2#0",
        "metadata_hash#0",
        "size#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0",
        "len%2#0"
      ]
    },
    "421": {
      "op": "intc_2 // 8",
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0",
        "len%2#0",
        "8"
      ]
    },
    "422": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "metadata_hash#0",
        "size#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0",
        "eq%2#0"
      ]
    },
    "423": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "tmp%3#0"
      ]
    },
    "424": {
      "op": "btoi",
      "defined_out": [
        "metadata_hash#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "votes#0"
      ]
    },
    "425": {
      "op": "bytec 5 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "metadata_hash#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "metadata_hash#0",
        "size#0",
        "votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "427": {
      "op": "uncover 3",
      "stack_out": [
        "size#0",
        "votes#0",
        "0x636f6d6d69747465655f6964",
        "metadata_hash#0"
      ]
    },
    "429": {
      "op": "app_global_put",
      "stack_out": [
        "size#0",
        "votes#0"
      ]
    },
    "430": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "size#0",
        "votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "432": {
      "op": "uncover 2",
      "stack_out": [
        "votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "size#0"
      ]
    },
    "434": {
      "op": "app_global_put",
      "stack_out": [
        "votes#0"
      ]
    },
    "435": {
      "op": "bytec 7 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "votes#0"
      ],
      "stack_out": [
        "votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "437": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "votes#0"
      ]
    },
    "438": {
      "op": "app_global_put",
      "stack_out": []
    },
    "439": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "440": {
      "op": "return",
      "stack_out": []
    },
    "441": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.vote[routing]",
      "params": {},
      "block": "vote",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "444": {
      "op": "len",
      "defined_out": [
        "len%0#0"
      ],
      "stack_out": [
        "len%0#0"
      ]
    },
    "445": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0"
      ],
      "stack_out": [
        "len%0#0",
        "32"
      ]
    },
    "446": {
      "op": "==",
      "defined_out": [
        "eq%0#0"
      ],
      "stack_out": [
        "eq%0#0"
      ]
    },
    "447": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": []
    },
    "448": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "approval_votes#0"
      ],
      "stack_out": [
        "approval_votes#0"
      ]
    },
    "451": {
      "op": "len",
      "defined_out": [
        "len%1#0"
      ],
      "stack_out": [
        "len%1#0"
      ]
    },
    "452": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%1#0"
      ],
      "stack_out": [
        "len%1#0",
        "8"
      ]
    },
    "453": {
      "op": "==",
      "defined_out": [
        "eq%1#0"
      ],
      "stack_out": [
        "eq%1#0"
      ]
    },
    "454": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": []
    },
    "455": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "rejection_votes#0"
      ],
      "stack_out": [
        "rejection_votes#0"
      ]
    },
    "458": {
      "op": "len",
      "defined_out": [
        "len%2#0"
      ],
      "stack_out": [
        "len%2#0"
      ]
    },
    "459": {
      "op": "intc_2 // 8",
      "stack_out": [
        "len%2#0",
        "8"
      ]
    },
    "460": {
      "op": "==",
      "defined_out": [
        "eq%2#0"
      ],
      "stack_out": [
        "eq%2#0"
      ]
    },
    "461": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": []
    },
    "462": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "463": {
      "op": "return",
      "stack_out": []
    }
  }
}